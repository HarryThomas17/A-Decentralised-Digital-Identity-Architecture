version: "3.7"

services:

  cp:
    build:
      context: .
      dockerfile: cp/Dockerfile
    container_name: cp
    restart: always
#    depends_on:
#      - redis
    environment:
      - APP_NAME=CertificationProvider
    expose:
      - ${cp_port}

#  cp_scheduler:
#    build:
#      context: .
#      dockerfile: redis/Dockerfile
#    container_name: scheduler
#    restart: always
#    depends_on:
#      - redis
#      - cp_worker
#      - nginx
#    links:
#      - redis:redis
#    command:
#      - "rqscheduler --host redis --port 6379"

#  cp_worker:
#    build:
#      context: .
#      dockerfile: redis/Dockerfile
#    container_name: worker
#    restart: always
#    depends_on:
#      - redis
#      - nginx
#    command:
#      - "rq worker --url redis:6379"

  ap:
    build:
      context: .
      dockerfile: ap/Dockerfile
    container_name: ap
    restart: always
    environment:
      - APP_NAME=AuthenticationProvider
    expose:
      - ${ap_port}

  service:
    build:
      context: .
      dockerfile: service/Dockerfile
    container_name: service
    restart: always
    environment:
      - APP_NAME=Service
    expose:
      - ${service_port}

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    volumes:
      - ./cp/cp_cert.crt:/etc/nginx/cp_cert.crt
      - ./cp/cp_cert.key:/etc/nginx/cp_cert.key
      - ./cp/cp_cert.crt:/etc/nginx/ap_cert.crt
      - ./cp/cp_cert.key:/etc/nginx/ap_cert.key
      - ./cp/cp_cert.crt:/etc/nginx/service_cert.crt
      - ./cp/cp_cert.key:/etc/nginx/service_cert.key
    ports:
      - "80:80"
      - "8080:8080"
      - "${ap_port}:${ap_port}"
      - "${cp_port}:${cp_port}"
      - "${service_port}:${service_port}"

#  redis:
#    image: redis:latest
#    container_name: redis
#    command: redis-server
#    restart: always
#    expose:
#      - "6379"
#    volumes:
#      - .:/redis/data



